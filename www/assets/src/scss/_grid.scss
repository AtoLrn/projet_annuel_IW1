@mixin grid-container-row($i) {
    display: flex;
    flex-direction: column;
    gap: $gutter-width;
    flex-grow: $i;
    min-width: calc((($i / ($col-nb)) * 100%) - $gutter-width);
    width: calc((($i / ($col-nb)) * 100%) - $gutter-width);
}

@mixin grid-container-col($i) {
    gap: $gutter-width;
    flex-grow: $i;
    min-height: calc((($i / ($col-nb)) * 100%) - $gutter-width);
    height: calc((($i / ($col-nb)) * 100%) - $gutter-width);
}

#userChart {
    height: 300px;
}

#articleChart {
    height: 300px;
}

.grid {
    position: relative;
    width: 100%;
    .col {     
        display: flex;
        flex-direction: column;
        
        &.reverse {
            flex-direction: column-reverse;
        }
        &.a-start {
            align-items: flex-start;
        }
        &.a-s {
            align-items: stretch;
        }
        &.a-center {
            align-items: center;
        }
        &.a-end {
            align-items: flex-end;
        }
        &.j-start {
            justify-content: flex-start;
        }
        &.j-center {
            justify-content: center;
        }
        &.j-bet {
            justify-content: space-between;
        }
        &.j-arr {
            justify-content: space-around;
        }
        &.j-end {
            justify-content: flex-end;
        }

        .a-self-end {
            align-self: flex-end;
        }
        .a-self-start {
            align-self: flex-start;
        }


        @for $i from 1 through $col-nb {
            .row-lg-#{$i} {
                @include grid-container-col($i);
            }

            .order-#{$i} {
                order: calc($i - 2);
            }
        }

        @media screen and (max-width: $md-breakpoint) {
            @for $i from 1 through $col-nb {
                .row-lg-#{$i} {
                    @include grid-container-col($i);
                }
            }
        }
        @media screen and (max-width: $sm-breakpoint) {
            @for $i from 1 through $col-nb {
                .row-lg-#{$i} {
                    @include grid-container-col($i);
                }
            }
        }
    }

    .row {
        width: 100%;
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        flex-direction: row;
        gap: $gutter-width;

        &.reverse {
            flex-direction: row-reverse;
        }
        &.a-start {
            align-items: flex-start;
        }
        &.a-s {
            align-items: stretch;
        }
        &.a-end {
            align-items: flex-end;
        }
        &.j-start {
            justify-content: flex-start;
        }
        &.j-bet {
            justify-content: space-between;
        }
        &.j-center {
            justify-content: center;
        }
        &.j-arr {
            justify-content: space-around;
        }
        &.j-end {
            justify-content: flex-end;
        }

        .a-self-end {
            align-self: flex-end;
        }
        .a-self-start {
            align-self: flex-start;
        }

        @for $i from 1 through $col-nb {
            .col-lg-#{$i} {
                @include grid-container-row($i);
            }
        }

        @media screen and (max-width: $md-breakpoint) {
            @for $i from 1 through $col-nb {
                .col-lg-#{$i} {
                    @include grid-container-row($i);
                }
            }
        }
        @media screen and (max-width: $sm-breakpoint) {
            @for $i from 1 through $col-nb {
                .col-lg-#{$i} {
                    @include grid-container-row($i);
                }
            }
        }
    }
}


.mobile {
    display: none !important;
    @include breakpoint(tablet) {
        display: flex !important;
    }
}

.desktop {
    @include breakpoint(tablet) {
        display: none;
    }
}
